"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[337],{8415:e=>{e.exports=JSON.parse('{"functions":[{"name":"FireServer","desc":"","params":[{"name":"args","desc":"The arguments tuple specified by the params schema","lua_type":"...any"}],"returns":[],"function_type":"method","source":{"line":42,"path":"src/Client.luau"}},{"name":"FireServerUnreliable","desc":":::warning[Unreliable]\\nThis is the UnreliableRemoteEvent version of [Client:FireServer].  \\nUnreliable variants can have reduced network traffic, at the cost of having a payload limit of 900 bytes, being unordered, and not guaranteed to be recieved.  \\nThis makes them good for non-essential events such as those for VFX, or constantly updating data that needs to be replicated.\\n:::","params":[{"name":"args","desc":"The arguments tuple specified by the params schema","lua_type":"...any"}],"returns":[],"function_type":"method","source":{"line":64,"path":"src/Client.luau"}},{"name":"InvokeServer","desc":":::warning\\nIf the server never returns anything, the thread will be left yielding forever unless a timeout is specified.\\n:::","params":[{"name":"args","desc":"The arguments tuple specified by the params schema","lua_type":"..any"}],"returns":[{"desc":"The return tuple specified by the returns schema, or nil if it times out","lua_type":"...any"}],"function_type":"method","yields":true,"source":{"line":86,"path":"src/Client.luau"}},{"name":"InvokeServerAsync","desc":"Asynchronous variant of InvokeServer that does not block the calling thread, and instead returns a Promise  \\n\\n:::warning\\nWithout an timeout set, the promise can yield forever if the server never returns anything.\\n\\nYou could use the Promise:timeout(n) method as well, just make sure to do this everywhere if you are removing the timeout.  \\nYou may want to set timeout very high as opposed to removing it, as without it the promise will raise a warning after 15 seconds.\\n:::","params":[{"name":"args","desc":"The arguments tuple specified by the params schema","lua_type":"..any"}],"returns":[{"desc":"","lua_type":"Promise"}],"function_type":"method","source":{"line":145,"path":"src/Client.luau"}}],"properties":[],"types":[],"name":"Client","desc":"","source":{"line":189,"path":"src/Client.luau"}}')}}]);