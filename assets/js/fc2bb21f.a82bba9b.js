"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[523],{7027:e=>{e.exports=JSON.parse('{"functions":[{"name":"Mount","desc":"Mounts a file (any instance but probably the module script remotes are being created in) and a table of Remote definitions to create a namespace\\n\\n\\n:::tip[Advanced]\\nThe reason file must be specified is because that is where the remote event instances will be stored under for each Remote. The reason we create events for each Remote\\nunlike other libraries is that sending a packet identifier is wasted bandwidth and it\'s better to let RakNet handle it. The permanent memory overhead from the extra\\nevents in negligable and network bandwidth is far limited with the 50kbps cap.\\n\\nThis in theory means we cant have multiple remotes with the same name in one module, but what if you want to further categorize said file by organising remotes into\\nmultiple namespaces. One way we can do this is to create some folders under our file and create new namespaces from those.\\n:::","params":[{"name":"_","desc":"","lua_type":"types.PakNet"},{"name":"file","desc":"","lua_type":"Instance"},{"name":"RemoteTable","desc":"","lua_type":"{[string]: RemoteSetting}"}],"returns":[{"desc":"","lua_type":"{[string]: Server | Client}"}],"function_type":"static","source":{"line":46,"path":"src/init.luau"}}],"properties":[],"types":[],"name":"PakNet","desc":"Main class for PakNet, used to create Remotes and houses some utilities","source":{"line":28,"path":"src/init.luau"}}')}}]);